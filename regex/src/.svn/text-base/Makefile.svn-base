#############################################################################
# Makefile for building: rajat
# Generated by qmake (1.07a) (Qt 3.3.6) on: Mon Jul  2 11:23:42 2012
# Project:  src.pro
# Template: app
# Command: $(QMAKE) -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC       = g++
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -g -w
CXXFLAGS = -g -w
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt-mt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ../obj/

####### Files

HEADERS = cache.h \
		dfa.h \
		dfas_memory.h \
		dheap.h \
		fa_memory.h \
		hfa_memory.h \
		hybrid_fa.h \
		int_set.h \
		linked_set.h \
		nfa.h \
		parser.h \
		partition.h \
		reg_ex.h \
		regex_common.h \
		smarf_memory.h \
		stdinc.h \
		subset.h \
		trace.h \
		wgraph.h
SOURCES = cache.c \
		dfa.c \
		dfas_memory.c \
		dheap.c \
		fa_memory.c \
		hfa_memory.c \
		hybrid_fa.c \
		int_set.c \
		linked_set.c \
		main.c \
		main_tracegen.c \
		nfa.c \
		parser.c \
		partition.c \
		regex_common.c \
		smarf_memory.c \
		stdinc.c \
		subset.c \
		trace.c \
		wgraph.c
OBJECTS = ../obj/cache.o \
		../obj/dfa.o \
		../obj/dfas_memory.o \
		../obj/dheap.o \
		../obj/fa_memory.o \
		../obj/hfa_memory.o \
		../obj/hybrid_fa.o \
		../obj/int_set.o \
		../obj/linked_set.o \
		../obj/main.o \
		../obj/main_tracegen.o \
		../obj/nfa.o \
		../obj/parser.o \
		../obj/partition.o \
		../obj/regex_common.o \
		../obj/smarf_memory.o \
		../obj/stdinc.o \
		../obj/subset.o \
		../obj/trace.o \
		../obj/wgraph.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = src.pro
QMAKE_TARGET = rajat
DESTDIR  = 
TARGET   = rajat

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: src.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile src.pro
qmake: 
	@$(QMAKE) -o Makefile src.pro

dist: 
	@mkdir -p ../obj/rajat && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) ../obj/rajat/ && ( cd `dirname ../obj/rajat` && $(TAR) rajat.tar rajat && $(GZIP) rajat.tar ) && $(MOVE) `dirname ../obj/rajat`/rajat.tar.gz . && $(DEL_FILE) -r ../obj/rajat

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

../obj/cache.o: cache.c cache.h \
		stdinc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/cache.o cache.c

../obj/dfa.o: dfa.c dfa.h \
		nfa.h \
		dheap.h \
		stdinc.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/dfa.o dfa.c

../obj/dfas_memory.o: dfas_memory.c dfas_memory.h \
		stdinc.h \
		dfa.h \
		cache.h \
		fa_memory.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/dfas_memory.o dfas_memory.c

../obj/dheap.o: dheap.c stdinc.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/dheap.o dheap.c

../obj/fa_memory.o: fa_memory.c fa_memory.h \
		stdinc.h \
		dfa.h \
		nfa.h \
		cache.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/fa_memory.o fa_memory.c

../obj/hfa_memory.o: hfa_memory.c hfa_memory.h \
		stdinc.h \
		dfa.h \
		nfa.h \
		smarf_memory.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/hfa_memory.o hfa_memory.c

../obj/hybrid_fa.o: hybrid_fa.c hybrid_fa.h \
		subset.h \
		stdinc.h \
		dfa.h \
		nfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/hybrid_fa.o hybrid_fa.c

../obj/int_set.o: int_set.c int_set.h \
		stdinc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/int_set.o int_set.c

../obj/linked_set.o: linked_set.c linked_set.h \
		stdinc.h \
		int_set.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/linked_set.o linked_set.c

../obj/main.o: main.c stdinc.h \
		nfa.h \
		dfa.h \
		hybrid_fa.h \
		parser.h \
		trace.h \
		regex_common.h \
		smarf_memory.h \
		linked_set.h \
		int_set.h \
		wgraph.h \
		partition.h \
		fa_memory.h \
		dfas_memory.h \
		cache.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/main.o main.c

../obj/main_tracegen.o: main_tracegen.c stdinc.h \
		nfa.h \
		parser.h \
		trace.h \
		regex_common.h \
		linked_set.h \
		dfa.h \
		int_set.h \
		wgraph.h \
		partition.h \
		hybrid_fa.h \
		fa_memory.h \
		dfas_memory.h \
		cache.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/main_tracegen.o main_tracegen.c

../obj/nfa.o: nfa.c nfa.h \
		subset.h \
		stdinc.h \
		linked_set.h \
		dfa.h \
		int_set.h \
		wgraph.h \
		partition.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/nfa.o nfa.c

../obj/parser.o: parser.c parser.h \
		stdinc.h \
		nfa.h \
		dfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/parser.o parser.c

../obj/partition.o: partition.c stdinc.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/partition.o partition.c

../obj/regex_common.o: regex_common.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/regex_common.o regex_common.c

../obj/smarf_memory.o: smarf_memory.c smarf_memory.h \
		stdinc.h \
		dfa.h \
		nfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/smarf_memory.o smarf_memory.c

../obj/stdinc.o: stdinc.c stdinc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/stdinc.o stdinc.c

../obj/subset.o: subset.c subset.h \
		stdinc.h \
		dfa.h \
		nfa.h \
		dheap.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/subset.o subset.c

../obj/trace.o: trace.c trace.h \
		dheap.h \
		dfa.h \
		nfa.h \
		hybrid_fa.h \
		fa_memory.h \
		dfas_memory.h \
		stdinc.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		cache.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/trace.o trace.c

../obj/wgraph.o: wgraph.c stdinc.h \
		wgraph.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/wgraph.o wgraph.c

####### Install

install:  

uninstall:  

