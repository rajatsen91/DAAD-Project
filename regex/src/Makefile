#############################################################################
# Makefile for building: rajat
# Generated by qmake (2.01a) (Qt 4.8.1) on: Wed Nov 7 20:11:05 2012
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ../obj/

####### Files

SOURCES       = cache.c \
		dfa.c \
		dfas_memory.c \
		dheap.c \
		fa_memory.c \
		hfa_memory.c \
		hybrid_fa.c \
		int_set.c \
		linked_set.c \
		main.c \
		main_tracegen.c \
		nfa.c \
		parser.c \
		partition.c \
		regex_common.c \
		smarf_memory.c \
		stdinc.c \
		subset.c \
		trace.c \
		wgraph.c 
OBJECTS       = ../obj/cache.o \
		../obj/dfa.o \
		../obj/dfas_memory.o \
		../obj/dheap.o \
		../obj/fa_memory.o \
		../obj/hfa_memory.o \
		../obj/hybrid_fa.o \
		../obj/int_set.o \
		../obj/linked_set.o \
		../obj/main.o \
		../obj/main_tracegen.o \
		../obj/nfa.o \
		../obj/parser.o \
		../obj/partition.o \
		../obj/regex_common.o \
		../obj/smarf_memory.o \
		../obj/stdinc.o \
		../obj/subset.o \
		../obj/trace.o \
		../obj/wgraph.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = rajat
DESTDIR       = 
TARGET        = rajat

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile src.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) ../obj/rajat1.0.0 || $(MKDIR) ../obj/rajat1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../obj/rajat1.0.0/ && $(COPY_FILE) --parents cache.h dfa.h dfas_memory.h dheap.h fa_memory.h hfa_memory.h hybrid_fa.h int_set.h linked_set.h nfa.h parser.h partition.h reg_ex.h regex_common.h smarf_memory.h stdinc.h subset.h trace.h wgraph.h ../obj/rajat1.0.0/ && $(COPY_FILE) --parents cache.c dfa.c dfas_memory.c dheap.c fa_memory.c hfa_memory.c hybrid_fa.c int_set.c linked_set.c main.c main_tracegen.c nfa.c parser.c partition.c regex_common.c smarf_memory.c stdinc.c subset.c trace.c wgraph.c ../obj/rajat1.0.0/ && (cd `dirname ../obj/rajat1.0.0` && $(TAR) rajat1.0.0.tar rajat1.0.0 && $(COMPRESS) rajat1.0.0.tar) && $(MOVE) `dirname ../obj/rajat1.0.0`/rajat1.0.0.tar.gz . && $(DEL_FILE) -r ../obj/rajat1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

../obj/cache.o: cache.c cache.h \
		stdinc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/cache.o cache.c

../obj/dfa.o: dfa.c dfa.h \
		stdinc.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/dfa.o dfa.c

../obj/dfas_memory.o: dfas_memory.c dfas_memory.h \
		stdinc.h \
		dfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		cache.h \
		fa_memory.h \
		nfa.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/dfas_memory.o dfas_memory.c

../obj/dheap.o: dheap.c stdinc.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/dheap.o dheap.c

../obj/fa_memory.o: fa_memory.c fa_memory.h \
		stdinc.h \
		dfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h \
		cache.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/fa_memory.o fa_memory.c

../obj/hfa_memory.o: hfa_memory.c hfa_memory.h \
		stdinc.h \
		dfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h \
		hybrid_fa.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/hfa_memory.o hfa_memory.c

../obj/hybrid_fa.o: hybrid_fa.c hybrid_fa.h \
		stdinc.h \
		dfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h \
		subset.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/hybrid_fa.o hybrid_fa.c

../obj/int_set.o: int_set.c int_set.h \
		stdinc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/int_set.o int_set.c

../obj/linked_set.o: linked_set.c linked_set.h \
		stdinc.h \
		int_set.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/linked_set.o linked_set.c

../obj/main.o: main.c stdinc.h \
		nfa.h \
		linked_set.h \
		dfa.h \
		int_set.h \
		wgraph.h \
		partition.h \
		hybrid_fa.h \
		parser.h \
		trace.h \
		fa_memory.h \
		cache.h \
		dfas_memory.h \
		regex_common.h \
		smarf_memory.h \
		hfa_memory.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/main.o main.c

../obj/main_tracegen.o: main_tracegen.c stdinc.h \
		nfa.h \
		linked_set.h \
		dfa.h \
		int_set.h \
		wgraph.h \
		partition.h \
		parser.h \
		trace.h \
		hybrid_fa.h \
		fa_memory.h \
		cache.h \
		dfas_memory.h \
		regex_common.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/main_tracegen.o main_tracegen.c

../obj/nfa.o: nfa.c nfa.h \
		stdinc.h \
		linked_set.h \
		dfa.h \
		int_set.h \
		wgraph.h \
		partition.h \
		subset.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/nfa.o nfa.c

../obj/parser.o: parser.c parser.h \
		stdinc.h \
		nfa.h \
		linked_set.h \
		dfa.h \
		int_set.h \
		wgraph.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/parser.o parser.c

../obj/partition.o: partition.c stdinc.h \
		partition.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/partition.o partition.c

../obj/regex_common.o: regex_common.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/regex_common.o regex_common.c

../obj/smarf_memory.o: smarf_memory.c smarf_memory.h \
		stdinc.h \
		dfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/smarf_memory.o smarf_memory.c

../obj/stdinc.o: stdinc.c stdinc.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/stdinc.o stdinc.c

../obj/subset.o: subset.c subset.h \
		stdinc.h \
		dfa.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/subset.o subset.c

../obj/trace.o: trace.c trace.h \
		dfa.h \
		stdinc.h \
		int_set.h \
		linked_set.h \
		wgraph.h \
		partition.h \
		nfa.h \
		hybrid_fa.h \
		fa_memory.h \
		cache.h \
		dfas_memory.h \
		dheap.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/trace.o trace.c

../obj/wgraph.o: wgraph.c stdinc.h \
		wgraph.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../obj/wgraph.o wgraph.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

